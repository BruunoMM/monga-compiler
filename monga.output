Grammar

    0 $accept: programa $end

    1 programa: definicao

    2 definicao: def_vars def_funcoes

    3 def_var: TK_ID ':' tipo ';'

    4 def_vars: def_vars def_var
    5         | %empty

    6 tipo: tipo_primario
    7     | '[' tipo ']'

    8 tipo_primario: TK_CHAR
    9              | TK_INT
   10              | TK_FLOAT
   11              | TK_BOOL

   12 def_funcao: TK_ID '(' parametros ')' ':' tipo_retorno bloco

   13 def_funcoes: def_funcao def_funcoes
   14            | %empty

   15 tipo_retorno: tipo
   16             | %empty

   17 parametros: parametro parametrosAlt
   18           | %empty

   19 parametrosAlt: ',' parametro parametrosAlt
   20              | %empty

   21 parametro: TK_ID ':' tipo

   22 bloco: '{' def_vars comandos '}'

   23 var: TK_ID
   24    | exp_generica '[' exp_somasub ']'

   25 comandos: comando comandos
   26         | %empty

   27 comando: TK_IF exp bloco
   28        | TK_IF exp bloco else
   29        | TK_WHILE exp bloco
   30        | var TK_ATTRIBUITION exp ';'
   31        | TK_RETURN exp_or ';'
   32        | TK_RETURN ';'
   33        | chamada ';'
   34        | '@' exp ';'
   35        | bloco

   36 else: TK_ELSE bloco

   37 exp: exp_or

   38 exp_or: exp_and
   39       | exp_and TK_OR exp_and

   40 exp_and: exp_equals
   41        | exp_equals TK_AND exp_equals

   42 exp_equals: exp_comparacao TK_EQUALS exp_comparacao
   43           | exp_comparacao TK_NOTEQUALS exp_comparacao
   44           | exp_comparacao

   45 exp_comparacao: exp_somasub TK_LEQUALS exp_somasub
   46               | exp_somasub TK_GEQUALS exp_somasub
   47               | exp_somasub TK_LESSER exp_somasub
   48               | exp_somasub TK_GREATER exp_somasub
   49               | exp_somasub

   50 exp_somasub: exp_multdiv TK_MINUS exp_multdiv
   51            | exp_multdiv TK_PLUS exp_multdiv
   52            | exp_multdiv

   53 exp_multdiv: exp_posfixada TK_MULTIPLY exp_prefixada
   54            | exp_posfixada TK_DIVISION exp_prefixada
   55            | exp_posfixada

   56 exp_prefixada: TK_NOT exp_prefixada
   57              | TK_MINUS exp_prefixada
   58              | exp_posfixada

   59 exp_posfixada: exp_generica
   60              | exp_generica TK_AS tipo
   61              | exp_new

   62 exp_new: TK_NEW tipo '[' exp_somasub ']'

   63 exp_generica: generico
   64             | chamada

   65 chamada: TK_ID '(' lista_exp ')'

   66 lista_exp: exp_or exp_opcional

   67 exp_opcional: %empty
   68             | ',' lista_exp

   69 numero: TK_INTVALUE
   70       | TK_FLOATVALUE
   71       | TK_LITERALVALUE

   72 string: TK_STRING

   73 generico: numero
   74         | var
   75         | string
   76         | '(' exp ')'
   77         | TK_TRUE
   78         | TK_FALSE
   79         | TK_LITERAL


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 12 65 76
    ')' (41) 12 65 76
    ',' (44) 19 68
    ':' (58) 3 12 21
    ';' (59) 3 30 31 32 33 34
    '@' (64) 34
    '[' (91) 7 24 62
    ']' (93) 7 24 62
    '{' (123) 22
    '}' (125) 22
    error (256)
    TK_CHAR (258) 8
    TK_INT (259) 9
    TK_FLOAT (260) 10
    TK_BOOL (261) 11
    TK_RETURN (262) 31 32
    TK_IF (263) 27 28
    TK_ELSE (264) 36
    TK_AS (265) 60
    TK_NEW (266) 62
    TK_WHILE (267) 29
    TK_TRUE (268) 77
    TK_FALSE (269) 78
    TK_PLUS (270) 51
    TK_MINUS (271) 50 57
    TK_MULTIPLY (272) 53
    TK_DIVISION (273) 54
    TK_ATTRIBUITION (274) 30
    TK_EQUALS (275) 42
    TK_NOTEQUALS (276) 43
    TK_GEQUALS (277) 46
    TK_LEQUALS (278) 45
    TK_GREATER (279) 48
    TK_LESSER (280) 47
    TK_NOT (281) 56
    TK_AND (282) 41
    TK_OR (283) 39
    TK_ID (284) 3 12 21 23 65
    TK_STRING (285) 72
    TK_LITERAL (286) 79
    TK_INTVALUE (287) 69
    TK_FLOATVALUE (288) 70
    TK_LITERALVALUE (289) 71


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    programa (46)
        on left: 1
        on right: 0
    definicao (47)
        on left: 2
        on right: 1
    def_var (48)
        on left: 3
        on right: 4
    def_vars (49)
        on left: 4 5
        on right: 2 4 22
    tipo (50)
        on left: 6 7
        on right: 3 7 15 21 60 62
    tipo_primario (51)
        on left: 8 9 10 11
        on right: 6
    def_funcao (52)
        on left: 12
        on right: 13
    def_funcoes (53)
        on left: 13 14
        on right: 2 13
    tipo_retorno (54)
        on left: 15 16
        on right: 12
    parametros (55)
        on left: 17 18
        on right: 12
    parametrosAlt (56)
        on left: 19 20
        on right: 17 19
    parametro (57)
        on left: 21
        on right: 17 19
    bloco (58)
        on left: 22
        on right: 12 27 28 29 35 36
    var (59)
        on left: 23 24
        on right: 30 74
    comandos (60)
        on left: 25 26
        on right: 22 25
    comando (61)
        on left: 27 28 29 30 31 32 33 34 35
        on right: 25
    else (62)
        on left: 36
        on right: 28
    exp (63)
        on left: 37
        on right: 27 28 29 30 34 76
    exp_or (64)
        on left: 38 39
        on right: 31 37 66
    exp_and (65)
        on left: 40 41
        on right: 38 39
    exp_equals (66)
        on left: 42 43 44
        on right: 40 41
    exp_comparacao (67)
        on left: 45 46 47 48 49
        on right: 42 43 44
    exp_somasub (68)
        on left: 50 51 52
        on right: 24 45 46 47 48 49 62
    exp_multdiv (69)
        on left: 53 54 55
        on right: 50 51 52
    exp_prefixada (70)
        on left: 56 57 58
        on right: 53 54 56 57
    exp_posfixada (71)
        on left: 59 60 61
        on right: 53 54 55 58
    exp_new (72)
        on left: 62
        on right: 61
    exp_generica (73)
        on left: 63 64
        on right: 24 59 60
    chamada (74)
        on left: 65
        on right: 33 64
    lista_exp (75)
        on left: 66
        on right: 65 68
    exp_opcional (76)
        on left: 67 68
        on right: 66
    numero (77)
        on left: 69 70 71
        on right: 73
    string (78)
        on left: 72
        on right: 75
    generico (79)
        on left: 73 74 75 76 77 78 79
        on right: 63


State 0

    0 $accept: . programa $end
    1 programa: . definicao
    2 definicao: . def_vars def_funcoes
    4 def_vars: . def_vars def_var
    5         | . %empty

    $default  reduce using rule 5 (def_vars)

    programa   go to state 1
    definicao  go to state 2
    def_vars   go to state 3


State 1

    0 $accept: programa . $end

    $end  shift, and go to state 4


State 2

    1 programa: definicao .

    $default  reduce using rule 1 (programa)


State 3

    2 definicao: def_vars . def_funcoes
    3 def_var: . TK_ID ':' tipo ';'
    4 def_vars: def_vars . def_var
   12 def_funcao: . TK_ID '(' parametros ')' ':' tipo_retorno bloco
   13 def_funcoes: . def_funcao def_funcoes
   14            | . %empty  [$end]

    TK_ID  shift, and go to state 5

    $default  reduce using rule 14 (def_funcoes)

    def_var      go to state 6
    def_funcao   go to state 7
    def_funcoes  go to state 8


State 4

    0 $accept: programa $end .

    $default  accept


State 5

    3 def_var: TK_ID . ':' tipo ';'
   12 def_funcao: TK_ID . '(' parametros ')' ':' tipo_retorno bloco

    ':'  shift, and go to state 9
    '('  shift, and go to state 10


State 6

    4 def_vars: def_vars def_var .

    $default  reduce using rule 4 (def_vars)


State 7

   12 def_funcao: . TK_ID '(' parametros ')' ':' tipo_retorno bloco
   13 def_funcoes: . def_funcao def_funcoes
   13            | def_funcao . def_funcoes
   14            | . %empty  [$end]

    TK_ID  shift, and go to state 11

    $default  reduce using rule 14 (def_funcoes)

    def_funcao   go to state 7
    def_funcoes  go to state 12


State 8

    2 definicao: def_vars def_funcoes .

    $default  reduce using rule 2 (definicao)


State 9

    3 def_var: TK_ID ':' . tipo ';'
    6 tipo: . tipo_primario
    7     | . '[' tipo ']'
    8 tipo_primario: . TK_CHAR
    9              | . TK_INT
   10              | . TK_FLOAT
   11              | . TK_BOOL

    TK_CHAR   shift, and go to state 13
    TK_INT    shift, and go to state 14
    TK_FLOAT  shift, and go to state 15
    TK_BOOL   shift, and go to state 16
    '['       shift, and go to state 17

    tipo           go to state 18
    tipo_primario  go to state 19


State 10

   12 def_funcao: TK_ID '(' . parametros ')' ':' tipo_retorno bloco
   17 parametros: . parametro parametrosAlt
   18           | . %empty  [')']
   21 parametro: . TK_ID ':' tipo

    TK_ID  shift, and go to state 20

    $default  reduce using rule 18 (parametros)

    parametros  go to state 21
    parametro   go to state 22


State 11

   12 def_funcao: TK_ID . '(' parametros ')' ':' tipo_retorno bloco

    '('  shift, and go to state 10


State 12

   13 def_funcoes: def_funcao def_funcoes .

    $default  reduce using rule 13 (def_funcoes)


State 13

    8 tipo_primario: TK_CHAR .

    $default  reduce using rule 8 (tipo_primario)


State 14

    9 tipo_primario: TK_INT .

    $default  reduce using rule 9 (tipo_primario)


State 15

   10 tipo_primario: TK_FLOAT .

    $default  reduce using rule 10 (tipo_primario)


State 16

   11 tipo_primario: TK_BOOL .

    $default  reduce using rule 11 (tipo_primario)


State 17

    6 tipo: . tipo_primario
    7     | . '[' tipo ']'
    7     | '[' . tipo ']'
    8 tipo_primario: . TK_CHAR
    9              | . TK_INT
   10              | . TK_FLOAT
   11              | . TK_BOOL

    TK_CHAR   shift, and go to state 13
    TK_INT    shift, and go to state 14
    TK_FLOAT  shift, and go to state 15
    TK_BOOL   shift, and go to state 16
    '['       shift, and go to state 17

    tipo           go to state 23
    tipo_primario  go to state 19


State 18

    3 def_var: TK_ID ':' tipo . ';'

    ';'  shift, and go to state 24


State 19

    6 tipo: tipo_primario .

    $default  reduce using rule 6 (tipo)


State 20

   21 parametro: TK_ID . ':' tipo

    ':'  shift, and go to state 25


State 21

   12 def_funcao: TK_ID '(' parametros . ')' ':' tipo_retorno bloco

    ')'  shift, and go to state 26


State 22

   17 parametros: parametro . parametrosAlt
   19 parametrosAlt: . ',' parametro parametrosAlt
   20              | . %empty  [')']

    ','  shift, and go to state 27

    $default  reduce using rule 20 (parametrosAlt)

    parametrosAlt  go to state 28


State 23

    7 tipo: '[' tipo . ']'

    ']'  shift, and go to state 29


State 24

    3 def_var: TK_ID ':' tipo ';' .

    $default  reduce using rule 3 (def_var)


State 25

    6 tipo: . tipo_primario
    7     | . '[' tipo ']'
    8 tipo_primario: . TK_CHAR
    9              | . TK_INT
   10              | . TK_FLOAT
   11              | . TK_BOOL
   21 parametro: TK_ID ':' . tipo

    TK_CHAR   shift, and go to state 13
    TK_INT    shift, and go to state 14
    TK_FLOAT  shift, and go to state 15
    TK_BOOL   shift, and go to state 16
    '['       shift, and go to state 17

    tipo           go to state 30
    tipo_primario  go to state 19


State 26

   12 def_funcao: TK_ID '(' parametros ')' . ':' tipo_retorno bloco

    ':'  shift, and go to state 31


State 27

   19 parametrosAlt: ',' . parametro parametrosAlt
   21 parametro: . TK_ID ':' tipo

    TK_ID  shift, and go to state 20

    parametro  go to state 32


State 28

   17 parametros: parametro parametrosAlt .

    $default  reduce using rule 17 (parametros)


State 29

    7 tipo: '[' tipo ']' .

    $default  reduce using rule 7 (tipo)


State 30

   21 parametro: TK_ID ':' tipo .

    $default  reduce using rule 21 (parametro)


State 31

    6 tipo: . tipo_primario
    7     | . '[' tipo ']'
    8 tipo_primario: . TK_CHAR
    9              | . TK_INT
   10              | . TK_FLOAT
   11              | . TK_BOOL
   12 def_funcao: TK_ID '(' parametros ')' ':' . tipo_retorno bloco
   15 tipo_retorno: . tipo
   16             | . %empty  ['{']

    TK_CHAR   shift, and go to state 13
    TK_INT    shift, and go to state 14
    TK_FLOAT  shift, and go to state 15
    TK_BOOL   shift, and go to state 16
    '['       shift, and go to state 17

    $default  reduce using rule 16 (tipo_retorno)

    tipo           go to state 33
    tipo_primario  go to state 19
    tipo_retorno   go to state 34


State 32

   19 parametrosAlt: . ',' parametro parametrosAlt
   19              | ',' parametro . parametrosAlt
   20              | . %empty  [')']

    ','  shift, and go to state 27

    $default  reduce using rule 20 (parametrosAlt)

    parametrosAlt  go to state 35


State 33

   15 tipo_retorno: tipo .

    $default  reduce using rule 15 (tipo_retorno)


State 34

   12 def_funcao: TK_ID '(' parametros ')' ':' tipo_retorno . bloco
   22 bloco: . '{' def_vars comandos '}'

    '{'  shift, and go to state 36

    bloco  go to state 37


State 35

   19 parametrosAlt: ',' parametro parametrosAlt .

    $default  reduce using rule 19 (parametrosAlt)


State 36

    4 def_vars: . def_vars def_var
    5         | . %empty
   22 bloco: '{' . def_vars comandos '}'

    $default  reduce using rule 5 (def_vars)

    def_vars  go to state 38


State 37

   12 def_funcao: TK_ID '(' parametros ')' ':' tipo_retorno bloco .

    $default  reduce using rule 12 (def_funcao)


State 38

    3 def_var: . TK_ID ':' tipo ';'
    4 def_vars: def_vars . def_var
   22 bloco: . '{' def_vars comandos '}'
   22      | '{' def_vars . comandos '}'
   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   25 comandos: . comando comandos
   26         | . %empty  ['}']
   27 comando: . TK_IF exp bloco
   28        | . TK_IF exp bloco else
   29        | . TK_WHILE exp bloco
   30        | . var TK_ATTRIBUITION exp ';'
   31        | . TK_RETURN exp_or ';'
   32        | . TK_RETURN ';'
   33        | . chamada ';'
   34        | . '@' exp ';'
   35        | . bloco
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_RETURN        shift, and go to state 39
    TK_IF            shift, and go to state 40
    TK_WHILE         shift, and go to state 41
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 44
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50
    '{'              shift, and go to state 36
    '@'              shift, and go to state 51

    $default  reduce using rule 26 (comandos)

    def_var       go to state 6
    bloco         go to state 52
    var           go to state 53
    comandos      go to state 54
    comando       go to state 55
    exp_generica  go to state 56
    chamada       go to state 57
    numero        go to state 58
    string        go to state 59
    generico      go to state 60


State 39

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   31 comando: TK_RETURN . exp_or ';'
   32        | TK_RETURN . ';'
   38 exp_or: . exp_and
   39       | . exp_and TK_OR exp_and
   40 exp_and: . exp_equals
   41        | . exp_equals TK_AND exp_equals
   42 exp_equals: . exp_comparacao TK_EQUALS exp_comparacao
   43           | . exp_comparacao TK_NOTEQUALS exp_comparacao
   44           | . exp_comparacao
   45 exp_comparacao: . exp_somasub TK_LEQUALS exp_somasub
   46               | . exp_somasub TK_GEQUALS exp_somasub
   47               | . exp_somasub TK_LESSER exp_somasub
   48               | . exp_somasub TK_GREATER exp_somasub
   49               | . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    ';'              shift, and go to state 63
    '('              shift, and go to state 50

    var             go to state 64
    exp_or          go to state 65
    exp_and         go to state 66
    exp_equals      go to state 67
    exp_comparacao  go to state 68
    exp_somasub     go to state 69
    exp_multdiv     go to state 70
    exp_posfixada   go to state 71
    exp_new         go to state 72
    exp_generica    go to state 73
    chamada         go to state 74
    numero          go to state 58
    string          go to state 59
    generico        go to state 60


State 40

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   27 comando: TK_IF . exp bloco
   28        | TK_IF . exp bloco else
   37 exp: . exp_or
   38 exp_or: . exp_and
   39       | . exp_and TK_OR exp_and
   40 exp_and: . exp_equals
   41        | . exp_equals TK_AND exp_equals
   42 exp_equals: . exp_comparacao TK_EQUALS exp_comparacao
   43           | . exp_comparacao TK_NOTEQUALS exp_comparacao
   44           | . exp_comparacao
   45 exp_comparacao: . exp_somasub TK_LEQUALS exp_somasub
   46               | . exp_somasub TK_GEQUALS exp_somasub
   47               | . exp_somasub TK_LESSER exp_somasub
   48               | . exp_somasub TK_GREATER exp_somasub
   49               | . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var             go to state 64
    exp             go to state 75
    exp_or          go to state 76
    exp_and         go to state 66
    exp_equals      go to state 67
    exp_comparacao  go to state 68
    exp_somasub     go to state 69
    exp_multdiv     go to state 70
    exp_posfixada   go to state 71
    exp_new         go to state 72
    exp_generica    go to state 73
    chamada         go to state 74
    numero          go to state 58
    string          go to state 59
    generico        go to state 60


State 41

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   29 comando: TK_WHILE . exp bloco
   37 exp: . exp_or
   38 exp_or: . exp_and
   39       | . exp_and TK_OR exp_and
   40 exp_and: . exp_equals
   41        | . exp_equals TK_AND exp_equals
   42 exp_equals: . exp_comparacao TK_EQUALS exp_comparacao
   43           | . exp_comparacao TK_NOTEQUALS exp_comparacao
   44           | . exp_comparacao
   45 exp_comparacao: . exp_somasub TK_LEQUALS exp_somasub
   46               | . exp_somasub TK_GEQUALS exp_somasub
   47               | . exp_somasub TK_LESSER exp_somasub
   48               | . exp_somasub TK_GREATER exp_somasub
   49               | . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var             go to state 64
    exp             go to state 77
    exp_or          go to state 76
    exp_and         go to state 66
    exp_equals      go to state 67
    exp_comparacao  go to state 68
    exp_somasub     go to state 69
    exp_multdiv     go to state 70
    exp_posfixada   go to state 71
    exp_new         go to state 72
    exp_generica    go to state 73
    chamada         go to state 74
    numero          go to state 58
    string          go to state 59
    generico        go to state 60


State 42

   77 generico: TK_TRUE .

    $default  reduce using rule 77 (generico)


State 43

   78 generico: TK_FALSE .

    $default  reduce using rule 78 (generico)


State 44

    3 def_var: TK_ID . ':' tipo ';'
   23 var: TK_ID .  [TK_ATTRIBUITION, '[']
   65 chamada: TK_ID . '(' lista_exp ')'

    ':'  shift, and go to state 9
    '('  shift, and go to state 78

    $default  reduce using rule 23 (var)


State 45

   72 string: TK_STRING .

    $default  reduce using rule 72 (string)


State 46

   79 generico: TK_LITERAL .

    $default  reduce using rule 79 (generico)


State 47

   69 numero: TK_INTVALUE .

    $default  reduce using rule 69 (numero)


State 48

   70 numero: TK_FLOATVALUE .

    $default  reduce using rule 70 (numero)


State 49

   71 numero: TK_LITERALVALUE .

    $default  reduce using rule 71 (numero)


State 50

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   37 exp: . exp_or
   38 exp_or: . exp_and
   39       | . exp_and TK_OR exp_and
   40 exp_and: . exp_equals
   41        | . exp_equals TK_AND exp_equals
   42 exp_equals: . exp_comparacao TK_EQUALS exp_comparacao
   43           | . exp_comparacao TK_NOTEQUALS exp_comparacao
   44           | . exp_comparacao
   45 exp_comparacao: . exp_somasub TK_LEQUALS exp_somasub
   46               | . exp_somasub TK_GEQUALS exp_somasub
   47               | . exp_somasub TK_LESSER exp_somasub
   48               | . exp_somasub TK_GREATER exp_somasub
   49               | . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   76         | '(' . exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var             go to state 64
    exp             go to state 79
    exp_or          go to state 76
    exp_and         go to state 66
    exp_equals      go to state 67
    exp_comparacao  go to state 68
    exp_somasub     go to state 69
    exp_multdiv     go to state 70
    exp_posfixada   go to state 71
    exp_new         go to state 72
    exp_generica    go to state 73
    chamada         go to state 74
    numero          go to state 58
    string          go to state 59
    generico        go to state 60


State 51

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   34 comando: '@' . exp ';'
   37 exp: . exp_or
   38 exp_or: . exp_and
   39       | . exp_and TK_OR exp_and
   40 exp_and: . exp_equals
   41        | . exp_equals TK_AND exp_equals
   42 exp_equals: . exp_comparacao TK_EQUALS exp_comparacao
   43           | . exp_comparacao TK_NOTEQUALS exp_comparacao
   44           | . exp_comparacao
   45 exp_comparacao: . exp_somasub TK_LEQUALS exp_somasub
   46               | . exp_somasub TK_GEQUALS exp_somasub
   47               | . exp_somasub TK_LESSER exp_somasub
   48               | . exp_somasub TK_GREATER exp_somasub
   49               | . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var             go to state 64
    exp             go to state 80
    exp_or          go to state 76
    exp_and         go to state 66
    exp_equals      go to state 67
    exp_comparacao  go to state 68
    exp_somasub     go to state 69
    exp_multdiv     go to state 70
    exp_posfixada   go to state 71
    exp_new         go to state 72
    exp_generica    go to state 73
    chamada         go to state 74
    numero          go to state 58
    string          go to state 59
    generico        go to state 60


State 52

   35 comando: bloco .

    $default  reduce using rule 35 (comando)


State 53

   30 comando: var . TK_ATTRIBUITION exp ';'
   74 generico: var .  ['[']

    TK_ATTRIBUITION  shift, and go to state 81

    $default  reduce using rule 74 (generico)


State 54

   22 bloco: '{' def_vars comandos . '}'

    '}'  shift, and go to state 82


State 55

   22 bloco: . '{' def_vars comandos '}'
   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   25 comandos: . comando comandos
   25         | comando . comandos
   26         | . %empty  ['}']
   27 comando: . TK_IF exp bloco
   28        | . TK_IF exp bloco else
   29        | . TK_WHILE exp bloco
   30        | . var TK_ATTRIBUITION exp ';'
   31        | . TK_RETURN exp_or ';'
   32        | . TK_RETURN ';'
   33        | . chamada ';'
   34        | . '@' exp ';'
   35        | . bloco
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_RETURN        shift, and go to state 39
    TK_IF            shift, and go to state 40
    TK_WHILE         shift, and go to state 41
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50
    '{'              shift, and go to state 36
    '@'              shift, and go to state 51

    $default  reduce using rule 26 (comandos)

    bloco         go to state 52
    var           go to state 53
    comandos      go to state 83
    comando       go to state 55
    exp_generica  go to state 56
    chamada       go to state 57
    numero        go to state 58
    string        go to state 59
    generico      go to state 60


State 56

   24 var: exp_generica . '[' exp_somasub ']'

    '['  shift, and go to state 84


State 57

   33 comando: chamada . ';'
   64 exp_generica: chamada .  ['[']

    ';'  shift, and go to state 85

    $default  reduce using rule 64 (exp_generica)


State 58

   73 generico: numero .

    $default  reduce using rule 73 (generico)


State 59

   75 generico: string .

    $default  reduce using rule 75 (generico)


State 60

   63 exp_generica: generico .

    $default  reduce using rule 63 (exp_generica)


State 61

    6 tipo: . tipo_primario
    7     | . '[' tipo ']'
    8 tipo_primario: . TK_CHAR
    9              | . TK_INT
   10              | . TK_FLOAT
   11              | . TK_BOOL
   62 exp_new: TK_NEW . tipo '[' exp_somasub ']'

    TK_CHAR   shift, and go to state 13
    TK_INT    shift, and go to state 14
    TK_FLOAT  shift, and go to state 15
    TK_BOOL   shift, and go to state 16
    '['       shift, and go to state 17

    tipo           go to state 86
    tipo_primario  go to state 19


State 62

   23 var: TK_ID .  [TK_AS, TK_PLUS, TK_MINUS, TK_MULTIPLY, TK_DIVISION, TK_ATTRIBUITION, TK_EQUALS, TK_NOTEQUALS, TK_GEQUALS, TK_LEQUALS, TK_GREATER, TK_LESSER, TK_AND, TK_OR, ';', '[', ']', ')', ',', '{']
   65 chamada: TK_ID . '(' lista_exp ')'

    '('  shift, and go to state 78

    $default  reduce using rule 23 (var)


State 63

   32 comando: TK_RETURN ';' .

    $default  reduce using rule 32 (comando)


State 64

   74 generico: var .

    $default  reduce using rule 74 (generico)


State 65

   31 comando: TK_RETURN exp_or . ';'

    ';'  shift, and go to state 87


State 66

   38 exp_or: exp_and .  [';', ')', ',', '{']
   39       | exp_and . TK_OR exp_and

    TK_OR  shift, and go to state 88

    $default  reduce using rule 38 (exp_or)


State 67

   40 exp_and: exp_equals .  [TK_OR, ';', ')', ',', '{']
   41        | exp_equals . TK_AND exp_equals

    TK_AND  shift, and go to state 89

    $default  reduce using rule 40 (exp_and)


State 68

   42 exp_equals: exp_comparacao . TK_EQUALS exp_comparacao
   43           | exp_comparacao . TK_NOTEQUALS exp_comparacao
   44           | exp_comparacao .  [TK_AND, TK_OR, ';', ')', ',', '{']

    TK_EQUALS     shift, and go to state 90
    TK_NOTEQUALS  shift, and go to state 91

    $default  reduce using rule 44 (exp_equals)


State 69

   45 exp_comparacao: exp_somasub . TK_LEQUALS exp_somasub
   46               | exp_somasub . TK_GEQUALS exp_somasub
   47               | exp_somasub . TK_LESSER exp_somasub
   48               | exp_somasub . TK_GREATER exp_somasub
   49               | exp_somasub .  [TK_EQUALS, TK_NOTEQUALS, TK_AND, TK_OR, ';', ')', ',', '{']

    TK_GEQUALS  shift, and go to state 92
    TK_LEQUALS  shift, and go to state 93
    TK_GREATER  shift, and go to state 94
    TK_LESSER   shift, and go to state 95

    $default  reduce using rule 49 (exp_comparacao)


State 70

   50 exp_somasub: exp_multdiv . TK_MINUS exp_multdiv
   51            | exp_multdiv . TK_PLUS exp_multdiv
   52            | exp_multdiv .  [TK_EQUALS, TK_NOTEQUALS, TK_GEQUALS, TK_LEQUALS, TK_GREATER, TK_LESSER, TK_AND, TK_OR, ';', ']', ')', ',', '{']

    TK_PLUS   shift, and go to state 96
    TK_MINUS  shift, and go to state 97

    $default  reduce using rule 52 (exp_somasub)


State 71

   53 exp_multdiv: exp_posfixada . TK_MULTIPLY exp_prefixada
   54            | exp_posfixada . TK_DIVISION exp_prefixada
   55            | exp_posfixada .  [TK_PLUS, TK_MINUS, TK_EQUALS, TK_NOTEQUALS, TK_GEQUALS, TK_LEQUALS, TK_GREATER, TK_LESSER, TK_AND, TK_OR, ';', ']', ')', ',', '{']

    TK_MULTIPLY  shift, and go to state 98
    TK_DIVISION  shift, and go to state 99

    $default  reduce using rule 55 (exp_multdiv)


State 72

   61 exp_posfixada: exp_new .

    $default  reduce using rule 61 (exp_posfixada)


State 73

   24 var: exp_generica . '[' exp_somasub ']'
   59 exp_posfixada: exp_generica .  [TK_PLUS, TK_MINUS, TK_MULTIPLY, TK_DIVISION, TK_EQUALS, TK_NOTEQUALS, TK_GEQUALS, TK_LEQUALS, TK_GREATER, TK_LESSER, TK_AND, TK_OR, ';', ']', ')', ',', '{']
   60              | exp_generica . TK_AS tipo

    TK_AS  shift, and go to state 100
    '['    shift, and go to state 84

    $default  reduce using rule 59 (exp_posfixada)


State 74

   64 exp_generica: chamada .

    $default  reduce using rule 64 (exp_generica)


State 75

   22 bloco: . '{' def_vars comandos '}'
   27 comando: TK_IF exp . bloco
   28        | TK_IF exp . bloco else

    '{'  shift, and go to state 36

    bloco  go to state 101


State 76

   37 exp: exp_or .

    $default  reduce using rule 37 (exp)


State 77

   22 bloco: . '{' def_vars comandos '}'
   29 comando: TK_WHILE exp . bloco

    '{'  shift, and go to state 36

    bloco  go to state 102


State 78

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   38 exp_or: . exp_and
   39       | . exp_and TK_OR exp_and
   40 exp_and: . exp_equals
   41        | . exp_equals TK_AND exp_equals
   42 exp_equals: . exp_comparacao TK_EQUALS exp_comparacao
   43           | . exp_comparacao TK_NOTEQUALS exp_comparacao
   44           | . exp_comparacao
   45 exp_comparacao: . exp_somasub TK_LEQUALS exp_somasub
   46               | . exp_somasub TK_GEQUALS exp_somasub
   47               | . exp_somasub TK_LESSER exp_somasub
   48               | . exp_somasub TK_GREATER exp_somasub
   49               | . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   65        | TK_ID '(' . lista_exp ')'
   66 lista_exp: . exp_or exp_opcional
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var             go to state 64
    exp_or          go to state 103
    exp_and         go to state 66
    exp_equals      go to state 67
    exp_comparacao  go to state 68
    exp_somasub     go to state 69
    exp_multdiv     go to state 70
    exp_posfixada   go to state 71
    exp_new         go to state 72
    exp_generica    go to state 73
    chamada         go to state 74
    lista_exp       go to state 104
    numero          go to state 58
    string          go to state 59
    generico        go to state 60


State 79

   76 generico: '(' exp . ')'

    ')'  shift, and go to state 105


State 80

   34 comando: '@' exp . ';'

    ';'  shift, and go to state 106


State 81

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   30 comando: var TK_ATTRIBUITION . exp ';'
   37 exp: . exp_or
   38 exp_or: . exp_and
   39       | . exp_and TK_OR exp_and
   40 exp_and: . exp_equals
   41        | . exp_equals TK_AND exp_equals
   42 exp_equals: . exp_comparacao TK_EQUALS exp_comparacao
   43           | . exp_comparacao TK_NOTEQUALS exp_comparacao
   44           | . exp_comparacao
   45 exp_comparacao: . exp_somasub TK_LEQUALS exp_somasub
   46               | . exp_somasub TK_GEQUALS exp_somasub
   47               | . exp_somasub TK_LESSER exp_somasub
   48               | . exp_somasub TK_GREATER exp_somasub
   49               | . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var             go to state 64
    exp             go to state 107
    exp_or          go to state 76
    exp_and         go to state 66
    exp_equals      go to state 67
    exp_comparacao  go to state 68
    exp_somasub     go to state 69
    exp_multdiv     go to state 70
    exp_posfixada   go to state 71
    exp_new         go to state 72
    exp_generica    go to state 73
    chamada         go to state 74
    numero          go to state 58
    string          go to state 59
    generico        go to state 60


State 82

   22 bloco: '{' def_vars comandos '}' .

    $default  reduce using rule 22 (bloco)


State 83

   25 comandos: comando comandos .

    $default  reduce using rule 25 (comandos)


State 84

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   24    | exp_generica '[' . exp_somasub ']'
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var            go to state 64
    exp_somasub    go to state 108
    exp_multdiv    go to state 70
    exp_posfixada  go to state 71
    exp_new        go to state 72
    exp_generica   go to state 73
    chamada        go to state 74
    numero         go to state 58
    string         go to state 59
    generico       go to state 60


State 85

   33 comando: chamada ';' .

    $default  reduce using rule 33 (comando)


State 86

   62 exp_new: TK_NEW tipo . '[' exp_somasub ']'

    '['  shift, and go to state 109


State 87

   31 comando: TK_RETURN exp_or ';' .

    $default  reduce using rule 31 (comando)


State 88

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   39 exp_or: exp_and TK_OR . exp_and
   40 exp_and: . exp_equals
   41        | . exp_equals TK_AND exp_equals
   42 exp_equals: . exp_comparacao TK_EQUALS exp_comparacao
   43           | . exp_comparacao TK_NOTEQUALS exp_comparacao
   44           | . exp_comparacao
   45 exp_comparacao: . exp_somasub TK_LEQUALS exp_somasub
   46               | . exp_somasub TK_GEQUALS exp_somasub
   47               | . exp_somasub TK_LESSER exp_somasub
   48               | . exp_somasub TK_GREATER exp_somasub
   49               | . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var             go to state 64
    exp_and         go to state 110
    exp_equals      go to state 67
    exp_comparacao  go to state 68
    exp_somasub     go to state 69
    exp_multdiv     go to state 70
    exp_posfixada   go to state 71
    exp_new         go to state 72
    exp_generica    go to state 73
    chamada         go to state 74
    numero          go to state 58
    string          go to state 59
    generico        go to state 60


State 89

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   41 exp_and: exp_equals TK_AND . exp_equals
   42 exp_equals: . exp_comparacao TK_EQUALS exp_comparacao
   43           | . exp_comparacao TK_NOTEQUALS exp_comparacao
   44           | . exp_comparacao
   45 exp_comparacao: . exp_somasub TK_LEQUALS exp_somasub
   46               | . exp_somasub TK_GEQUALS exp_somasub
   47               | . exp_somasub TK_LESSER exp_somasub
   48               | . exp_somasub TK_GREATER exp_somasub
   49               | . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var             go to state 64
    exp_equals      go to state 111
    exp_comparacao  go to state 68
    exp_somasub     go to state 69
    exp_multdiv     go to state 70
    exp_posfixada   go to state 71
    exp_new         go to state 72
    exp_generica    go to state 73
    chamada         go to state 74
    numero          go to state 58
    string          go to state 59
    generico        go to state 60


State 90

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   42 exp_equals: exp_comparacao TK_EQUALS . exp_comparacao
   45 exp_comparacao: . exp_somasub TK_LEQUALS exp_somasub
   46               | . exp_somasub TK_GEQUALS exp_somasub
   47               | . exp_somasub TK_LESSER exp_somasub
   48               | . exp_somasub TK_GREATER exp_somasub
   49               | . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var             go to state 64
    exp_comparacao  go to state 112
    exp_somasub     go to state 69
    exp_multdiv     go to state 70
    exp_posfixada   go to state 71
    exp_new         go to state 72
    exp_generica    go to state 73
    chamada         go to state 74
    numero          go to state 58
    string          go to state 59
    generico        go to state 60


State 91

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   43 exp_equals: exp_comparacao TK_NOTEQUALS . exp_comparacao
   45 exp_comparacao: . exp_somasub TK_LEQUALS exp_somasub
   46               | . exp_somasub TK_GEQUALS exp_somasub
   47               | . exp_somasub TK_LESSER exp_somasub
   48               | . exp_somasub TK_GREATER exp_somasub
   49               | . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var             go to state 64
    exp_comparacao  go to state 113
    exp_somasub     go to state 69
    exp_multdiv     go to state 70
    exp_posfixada   go to state 71
    exp_new         go to state 72
    exp_generica    go to state 73
    chamada         go to state 74
    numero          go to state 58
    string          go to state 59
    generico        go to state 60


State 92

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   46 exp_comparacao: exp_somasub TK_GEQUALS . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var            go to state 64
    exp_somasub    go to state 114
    exp_multdiv    go to state 70
    exp_posfixada  go to state 71
    exp_new        go to state 72
    exp_generica   go to state 73
    chamada        go to state 74
    numero         go to state 58
    string         go to state 59
    generico       go to state 60


State 93

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   45 exp_comparacao: exp_somasub TK_LEQUALS . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var            go to state 64
    exp_somasub    go to state 115
    exp_multdiv    go to state 70
    exp_posfixada  go to state 71
    exp_new        go to state 72
    exp_generica   go to state 73
    chamada        go to state 74
    numero         go to state 58
    string         go to state 59
    generico       go to state 60


State 94

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   48 exp_comparacao: exp_somasub TK_GREATER . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var            go to state 64
    exp_somasub    go to state 116
    exp_multdiv    go to state 70
    exp_posfixada  go to state 71
    exp_new        go to state 72
    exp_generica   go to state 73
    chamada        go to state 74
    numero         go to state 58
    string         go to state 59
    generico       go to state 60


State 95

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   47 exp_comparacao: exp_somasub TK_LESSER . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var            go to state 64
    exp_somasub    go to state 117
    exp_multdiv    go to state 70
    exp_posfixada  go to state 71
    exp_new        go to state 72
    exp_generica   go to state 73
    chamada        go to state 74
    numero         go to state 58
    string         go to state 59
    generico       go to state 60


State 96

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   51 exp_somasub: exp_multdiv TK_PLUS . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var            go to state 64
    exp_multdiv    go to state 118
    exp_posfixada  go to state 71
    exp_new        go to state 72
    exp_generica   go to state 73
    chamada        go to state 74
    numero         go to state 58
    string         go to state 59
    generico       go to state 60


State 97

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   50 exp_somasub: exp_multdiv TK_MINUS . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var            go to state 64
    exp_multdiv    go to state 119
    exp_posfixada  go to state 71
    exp_new        go to state 72
    exp_generica   go to state 73
    chamada        go to state 74
    numero         go to state 58
    string         go to state 59
    generico       go to state 60


State 98

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   53 exp_multdiv: exp_posfixada TK_MULTIPLY . exp_prefixada
   56 exp_prefixada: . TK_NOT exp_prefixada
   57              | . TK_MINUS exp_prefixada
   58              | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_MINUS         shift, and go to state 120
    TK_NOT           shift, and go to state 121
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var            go to state 64
    exp_prefixada  go to state 122
    exp_posfixada  go to state 123
    exp_new        go to state 72
    exp_generica   go to state 73
    chamada        go to state 74
    numero         go to state 58
    string         go to state 59
    generico       go to state 60


State 99

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   54 exp_multdiv: exp_posfixada TK_DIVISION . exp_prefixada
   56 exp_prefixada: . TK_NOT exp_prefixada
   57              | . TK_MINUS exp_prefixada
   58              | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_MINUS         shift, and go to state 120
    TK_NOT           shift, and go to state 121
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var            go to state 64
    exp_prefixada  go to state 124
    exp_posfixada  go to state 123
    exp_new        go to state 72
    exp_generica   go to state 73
    chamada        go to state 74
    numero         go to state 58
    string         go to state 59
    generico       go to state 60


State 100

    6 tipo: . tipo_primario
    7     | . '[' tipo ']'
    8 tipo_primario: . TK_CHAR
    9              | . TK_INT
   10              | . TK_FLOAT
   11              | . TK_BOOL
   60 exp_posfixada: exp_generica TK_AS . tipo

    TK_CHAR   shift, and go to state 13
    TK_INT    shift, and go to state 14
    TK_FLOAT  shift, and go to state 15
    TK_BOOL   shift, and go to state 16
    '['       shift, and go to state 17

    tipo           go to state 125
    tipo_primario  go to state 19


State 101

   27 comando: TK_IF exp bloco .  [TK_RETURN, TK_IF, TK_WHILE, TK_TRUE, TK_FALSE, TK_ID, TK_STRING, TK_LITERAL, TK_INTVALUE, TK_FLOATVALUE, TK_LITERALVALUE, '(', '{', '}', '@']
   28        | TK_IF exp bloco . else
   36 else: . TK_ELSE bloco

    TK_ELSE  shift, and go to state 126

    $default  reduce using rule 27 (comando)

    else  go to state 127


State 102

   29 comando: TK_WHILE exp bloco .

    $default  reduce using rule 29 (comando)


State 103

   66 lista_exp: exp_or . exp_opcional
   67 exp_opcional: . %empty  [')']
   68             | . ',' lista_exp

    ','  shift, and go to state 128

    $default  reduce using rule 67 (exp_opcional)

    exp_opcional  go to state 129


State 104

   65 chamada: TK_ID '(' lista_exp . ')'

    ')'  shift, and go to state 130


State 105

   76 generico: '(' exp ')' .

    $default  reduce using rule 76 (generico)


State 106

   34 comando: '@' exp ';' .

    $default  reduce using rule 34 (comando)


State 107

   30 comando: var TK_ATTRIBUITION exp . ';'

    ';'  shift, and go to state 131


State 108

   24 var: exp_generica '[' exp_somasub . ']'

    ']'  shift, and go to state 132


State 109

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   62        | TK_NEW tipo '[' . exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var            go to state 64
    exp_somasub    go to state 133
    exp_multdiv    go to state 70
    exp_posfixada  go to state 71
    exp_new        go to state 72
    exp_generica   go to state 73
    chamada        go to state 74
    numero         go to state 58
    string         go to state 59
    generico       go to state 60


State 110

   39 exp_or: exp_and TK_OR exp_and .

    $default  reduce using rule 39 (exp_or)


State 111

   41 exp_and: exp_equals TK_AND exp_equals .

    $default  reduce using rule 41 (exp_and)


State 112

   42 exp_equals: exp_comparacao TK_EQUALS exp_comparacao .

    $default  reduce using rule 42 (exp_equals)


State 113

   43 exp_equals: exp_comparacao TK_NOTEQUALS exp_comparacao .

    $default  reduce using rule 43 (exp_equals)


State 114

   46 exp_comparacao: exp_somasub TK_GEQUALS exp_somasub .

    $default  reduce using rule 46 (exp_comparacao)


State 115

   45 exp_comparacao: exp_somasub TK_LEQUALS exp_somasub .

    $default  reduce using rule 45 (exp_comparacao)


State 116

   48 exp_comparacao: exp_somasub TK_GREATER exp_somasub .

    $default  reduce using rule 48 (exp_comparacao)


State 117

   47 exp_comparacao: exp_somasub TK_LESSER exp_somasub .

    $default  reduce using rule 47 (exp_comparacao)


State 118

   51 exp_somasub: exp_multdiv TK_PLUS exp_multdiv .

    $default  reduce using rule 51 (exp_somasub)


State 119

   50 exp_somasub: exp_multdiv TK_MINUS exp_multdiv .

    $default  reduce using rule 50 (exp_somasub)


State 120

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   56 exp_prefixada: . TK_NOT exp_prefixada
   57              | . TK_MINUS exp_prefixada
   57              | TK_MINUS . exp_prefixada
   58              | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_MINUS         shift, and go to state 120
    TK_NOT           shift, and go to state 121
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var            go to state 64
    exp_prefixada  go to state 134
    exp_posfixada  go to state 123
    exp_new        go to state 72
    exp_generica   go to state 73
    chamada        go to state 74
    numero         go to state 58
    string         go to state 59
    generico       go to state 60


State 121

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   56 exp_prefixada: . TK_NOT exp_prefixada
   56              | TK_NOT . exp_prefixada
   57              | . TK_MINUS exp_prefixada
   58              | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_MINUS         shift, and go to state 120
    TK_NOT           shift, and go to state 121
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var            go to state 64
    exp_prefixada  go to state 135
    exp_posfixada  go to state 123
    exp_new        go to state 72
    exp_generica   go to state 73
    chamada        go to state 74
    numero         go to state 58
    string         go to state 59
    generico       go to state 60


State 122

   53 exp_multdiv: exp_posfixada TK_MULTIPLY exp_prefixada .

    $default  reduce using rule 53 (exp_multdiv)


State 123

   58 exp_prefixada: exp_posfixada .

    $default  reduce using rule 58 (exp_prefixada)


State 124

   54 exp_multdiv: exp_posfixada TK_DIVISION exp_prefixada .

    $default  reduce using rule 54 (exp_multdiv)


State 125

   60 exp_posfixada: exp_generica TK_AS tipo .

    $default  reduce using rule 60 (exp_posfixada)


State 126

   22 bloco: . '{' def_vars comandos '}'
   36 else: TK_ELSE . bloco

    '{'  shift, and go to state 36

    bloco  go to state 136


State 127

   28 comando: TK_IF exp bloco else .

    $default  reduce using rule 28 (comando)


State 128

   23 var: . TK_ID
   24    | . exp_generica '[' exp_somasub ']'
   38 exp_or: . exp_and
   39       | . exp_and TK_OR exp_and
   40 exp_and: . exp_equals
   41        | . exp_equals TK_AND exp_equals
   42 exp_equals: . exp_comparacao TK_EQUALS exp_comparacao
   43           | . exp_comparacao TK_NOTEQUALS exp_comparacao
   44           | . exp_comparacao
   45 exp_comparacao: . exp_somasub TK_LEQUALS exp_somasub
   46               | . exp_somasub TK_GEQUALS exp_somasub
   47               | . exp_somasub TK_LESSER exp_somasub
   48               | . exp_somasub TK_GREATER exp_somasub
   49               | . exp_somasub
   50 exp_somasub: . exp_multdiv TK_MINUS exp_multdiv
   51            | . exp_multdiv TK_PLUS exp_multdiv
   52            | . exp_multdiv
   53 exp_multdiv: . exp_posfixada TK_MULTIPLY exp_prefixada
   54            | . exp_posfixada TK_DIVISION exp_prefixada
   55            | . exp_posfixada
   59 exp_posfixada: . exp_generica
   60              | . exp_generica TK_AS tipo
   61              | . exp_new
   62 exp_new: . TK_NEW tipo '[' exp_somasub ']'
   63 exp_generica: . generico
   64             | . chamada
   65 chamada: . TK_ID '(' lista_exp ')'
   66 lista_exp: . exp_or exp_opcional
   68 exp_opcional: ',' . lista_exp
   69 numero: . TK_INTVALUE
   70       | . TK_FLOATVALUE
   71       | . TK_LITERALVALUE
   72 string: . TK_STRING
   73 generico: . numero
   74         | . var
   75         | . string
   76         | . '(' exp ')'
   77         | . TK_TRUE
   78         | . TK_FALSE
   79         | . TK_LITERAL

    TK_NEW           shift, and go to state 61
    TK_TRUE          shift, and go to state 42
    TK_FALSE         shift, and go to state 43
    TK_ID            shift, and go to state 62
    TK_STRING        shift, and go to state 45
    TK_LITERAL       shift, and go to state 46
    TK_INTVALUE      shift, and go to state 47
    TK_FLOATVALUE    shift, and go to state 48
    TK_LITERALVALUE  shift, and go to state 49
    '('              shift, and go to state 50

    var             go to state 64
    exp_or          go to state 103
    exp_and         go to state 66
    exp_equals      go to state 67
    exp_comparacao  go to state 68
    exp_somasub     go to state 69
    exp_multdiv     go to state 70
    exp_posfixada   go to state 71
    exp_new         go to state 72
    exp_generica    go to state 73
    chamada         go to state 74
    lista_exp       go to state 137
    numero          go to state 58
    string          go to state 59
    generico        go to state 60


State 129

   66 lista_exp: exp_or exp_opcional .

    $default  reduce using rule 66 (lista_exp)


State 130

   65 chamada: TK_ID '(' lista_exp ')' .

    $default  reduce using rule 65 (chamada)


State 131

   30 comando: var TK_ATTRIBUITION exp ';' .

    $default  reduce using rule 30 (comando)


State 132

   24 var: exp_generica '[' exp_somasub ']' .

    $default  reduce using rule 24 (var)


State 133

   62 exp_new: TK_NEW tipo '[' exp_somasub . ']'

    ']'  shift, and go to state 138


State 134

   57 exp_prefixada: TK_MINUS exp_prefixada .

    $default  reduce using rule 57 (exp_prefixada)


State 135

   56 exp_prefixada: TK_NOT exp_prefixada .

    $default  reduce using rule 56 (exp_prefixada)


State 136

   36 else: TK_ELSE bloco .

    $default  reduce using rule 36 (else)


State 137

   68 exp_opcional: ',' lista_exp .

    $default  reduce using rule 68 (exp_opcional)


State 138

   62 exp_new: TK_NEW tipo '[' exp_somasub ']' .

    $default  reduce using rule 62 (exp_new)
